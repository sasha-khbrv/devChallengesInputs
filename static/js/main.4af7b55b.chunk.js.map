{"version":3,"sources":["Components/TextInput/TextInput.jsx","Components/TextArea/TextArea.jsx","Components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["SIZE","TextInput","label","props","setInptSize","includes","size","useField","field","meta","className","htmlFor","id","touched","error","startIcon","endIcon","width","TextArea","Form","initialValues","firstInput","secondInput","thirdInput","fourthInput","fifthInput","sixthInput","seventhInput","eighthInput","firstTxtArea","validationSchema","Yup","max","required","name","type","placeholder","disabled","helperText","rows","App","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af7b55b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useField } from \"formik\";\r\n\r\nconst SIZE = [\r\n  'inpt--size--sm', 'inpt--size--md'\r\n]\r\n\r\nconst TextInput = ({ label, ...props }) => {\r\n\r\n  const setInptSize = SIZE.includes(props.size) ? props.size : 'inpt--size--md';\r\n\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"inputContainer\">\r\n      <label className='inputLabel' htmlFor={props.id}>\r\n        {label}\r\n        <input className={`inpt ${meta.touched && meta.error ? \"inptError\": ''} ${setInptSize} ${props.startIcon || ''} ${props.endIcon || ''} ${props.width || ''}`}\r\n        {...field}\r\n        {...props} />\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <span className=\"errorMsg\">{meta.error}</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { useField } from \"formik\";\r\n\r\n\r\n\r\nconst TextArea = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div  className=\"inputContainer\">\r\n      <textarea className={`inpt txtArea ${meta.touched && meta.error ? \"inptError\": ''}`}\r\n      {...field}\r\n      {...props}></textarea>\r\n      {meta.touched && meta.error ? (\r\n        <span className=\"errorMsg\">{meta.error}</span>\r\n      ) : null}\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextArea;\r\n","import React from 'react';\r\nimport TextInput from './TextInput/TextInput';\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from 'formik';\r\nimport TextArea from './TextArea/TextArea';\r\n\r\nconst Form = () => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          firstInput: \"\",\r\n          secondInput: \"\",\r\n          thirdInput: \"\",\r\n          fourthInput: \"\",\r\n          fifthInput: \"\",\r\n          sixthInput: \"\",\r\n          seventhInput: \"\",\r\n          eighthInput: \"\",\r\n          firstTxtArea: \"\"\r\n        }}\r\n        validationSchema={Yup.object({\r\n          firstInput: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required field\"),\r\n          firstTxtArea: Yup.string()\r\n            .max(170, 'Must be 170 characters or less')\r\n            .required(\"Required field\")\r\n        })}\r\n/*         onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise(r => setTimeout(r, 500));\r\n          setSubmitting(false);\r\n        }} */\r\n      >\r\n        <form>\r\n          <div className='row'>\r\n            <div className='cell'>\r\n              <p className='cell-title'>&lt;Input required/&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"firstInput\"\r\n                name=\"firstInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                required                \r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='cell'>\r\n              <p className='cell-title'>&lt;Input disabled /&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"secondInput\"\r\n                name=\"secondInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                disabled                \r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='cell'>\r\n              <p className='cell-title'>&lt;Input helperText=\"Some interesting text\" /&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"thirdInput\"\r\n                name=\"thirdInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                helperText=\"Some interesting text\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='cell'>\r\n              <p className='cell-title'>&lt;Input startIcon=\"face\" /&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"fourthInput\"\r\n                name=\"fourthInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                startIcon=\"inpt--startIcon--personAdd\"\r\n              />\r\n            </div>\r\n            <div className='cell'>\r\n              <p className='cell-title'>&lt;Input endIcon=\"face\" /&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"fifthInput\"\r\n                name=\"fifthInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                endIcon=\"inpt--endIcon--fingerPrint\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='cell'>\r\n              <p className='cell-title'>&lt;Input size=\"inpt--size--sm\" /&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"sixthInput\"\r\n                name=\"sixthInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                size=\"inpt--size--sm\"\r\n              />\r\n            </div>\r\n            <div className='cell'>\r\n              <p className='cell-title'>&lt;Input size=\"inpt--size--md\" /&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"seventhInput\"\r\n                name=\"seventhInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                size=\"inpt--size--md\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='cell cell-full-width' >\r\n              <p className='cell-title'>&lt;Input width=\"fullWidth\" /&gt;</p>\r\n              <TextInput\r\n                label=\"Label\"\r\n                id=\"eighthInput\"\r\n                name=\"eighthInput\"\r\n                type=\"text\"\r\n                placeholder=\"Placeholder\"\r\n                width=\"fullWidth\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='cell cell-full-width' >\r\n              <p className='cell-title'>&lt;Textarea required rows=\"4\" /&gt;</p>\r\n              <TextArea\r\n                label=\"Textarea\"\r\n                id=\"firstTxtArea\"\r\n                name=\"firstTxtArea\"\r\n                placeholder=\"Placeholder\"\r\n                rows='4'\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\nimport Forms from './Components/Form';\nimport './sass/style.scss';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <h1>Inputs</h1>\n      <Forms />\n      <div>\n        <p className=\"cell-title\">\n          Made for <a href=\"https://devchallenges.io/\" target=\"_blank\" rel=\"noreferrer\">DevChallenges</a> by <a href=\"https://github.com/sasha-khbrv?tab=repositories\" target=\"_blank\" rel=\"noreferrer\">Sasha Khbrv</a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}